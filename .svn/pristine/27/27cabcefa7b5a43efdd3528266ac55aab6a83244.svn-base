package com.genertech.controller;

import java.util.*;

import javax.jms.Queue;

import com.genertech.common.base.service.BaseDaoService;
import com.genertech.common.utils.Identities;
import com.genertech.consumer.domain.CZPSDO;
import com.genertech.prognostics.pojo.Prognostics;
import org.apache.activemq.command.ActiveMQQueue;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.genertech.consumer.ConsumerManager;

@RestController
public class TestController {

    @Autowired
    private ConsumerManager consumerManager;
    @Autowired
    private BaseDaoService daoService;

    private Queue getQueue(String queueName) {
        return new ActiveMQQueue(queueName);
    }

    @RequestMapping("/queue")
    public String queue() {
        System.out.println(consumerManager);
        String message = "我是消息内容, " + System.currentTimeMillis();
        // Destination destination = getQueue(Constants.MATERIAL_QUEUE);
        // template.convertAndSend(destination, message);
        return "success";
    }

    @RequestMapping("/test")
    public int test() {
        String message = "我是消息内容, " + System.currentTimeMillis();
        Map<String, Object> map = null;
        consumerManager.test();
        return consumerManager.test().size();
    }
    @RequestMapping("/list")
    public Object list(){
        Map<String, Object> params = new HashMap<>();
        List li = new ArrayList();
        li.add("D501050014");
        li.add("D303050075");
        params.put("ids",li);
        List list = daoService.list("select id,aa from czps where id in #{ids}",params, CZPSDO.class);
//        CZPSDO ss = new CZPSDO();
//        daoService.insertObject(ss);
        return list;
    }
    @RequestMapping("/insert")
    public Object insert(){
        Prognostics prognostics = new Prognostics();
        prognostics.setId(Identities.uuid());
        prognostics.setCreateTime(new Date());
        prognostics.setModelCode("DB01");

        Prognostics prognostics2 = new Prognostics();
        prognostics2.setId(Identities.uuid());
        prognostics2.setCreateTime(new Date());
        prognostics2.setModelCode("DB01");

        Prognostics prognostics3 = new Prognostics();
        prognostics3.setId(Identities.uuid());
        prognostics3.setCreateTime(new Date());
        prognostics3.setModelCode("DB01");

        List list = new ArrayList();
        list.add(prognostics);
        list.add(prognostics2);
        list.add(prognostics3);
//        daoService.insertObject(list);
//        daoService.insertObject("id,create_Time,model_code",list);
        daoService.insertObjectAllColumn(list);

        return "1";
    }
}
